/* #CSS IMAGE REPLACEMENT
================================================== */
/// CSS image replacement
///
/// Heads up! v3 launched with with only `.hide-text()`, but per our pattern for
/// mixins being reused as classes with the same name, this doesn't hold up. As
/// of v3.0.1 we have added `.text-hide()` and deprecated `.hide-text()`.
///
/// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757

    /// Deprecated as of v3.0.1 (will be removed in v4)
    @mixin hide-text() {
        font: #{0/0} a;
        color: transparent;
        text-shadow: none;
        background-color: transparent;
        border: 0;
    }

    // New mixin to use as of v3.0.1
    @mixin text-hide() {
        @include hide-text;
    }


/// Visualy hiding an element
/// Author: Hugo Giraudel
/// Source: http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/

/**
 * When you hide an element with display: none, that prevents screen readers
 * from reading it to the user. Sometimes thatâ€™s fine, but in other cases this
 * will make the site hard to use for people with screen readers. Thus, we have
 * to use another technique for hiding elements while at the same time make them
 * accessible.
 * In this example, we are using the Sass placeholder selector since the output
 * will always be the same, which enables us to reduce repetetive code in the output.
 */
    %visually-hidden {
        clip: rect(0 0 0 0);
        clip: rect(0, 0, 0, 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }

/// @USAGE EXAMPLE
/// HTML Structure
/// <button class="mobile-navigation-trigger">
///     <b class="visually-hidden">Open the navigation</b>
///     <img src="img/mobile-navigation-icon.svg">
/// </button>
///
/// CSS
/// .visually-hidden {
///     @extend %visually-hidden;
/// }
